#pragma once

float cieX[31] = {
    0.0143100000f,
    0.0435100000f,
    0.1343800000f,
    0.2839000000f,
    0.3482800000f,
    0.3362000000f,
    0.2908000000f,
    0.1953600000f,
    0.0956400000f,
    0.0320100000f,
    0.0049000000f,
    0.0093000000f,
    0.0632700000f,
    0.1655000000f,
    0.2904000000f,
    0.4334499000f,
    0.5945000000f,
    0.7621000000f,
    0.9163000000f,
    1.0263000000f,
    1.0622000000f,
    1.0026000000f,
    0.8544499000f,
    0.6424000000f,
    0.4479000000f,
    0.2835000000f,
    0.1649000000f,
    0.0874000000f,
    0.0467700000f,
    0.0227000000f,
    0.0113591600f
};

float cieY[31] = {
    0.0003960000f,
    0.0012100000f,
    0.0040000000f,
    0.0116000000f,
    0.0230000000f,
    0.0380000000f,
    0.0600000000f,
    0.0909800000f,
    0.1390200000f,
    0.2080200000f,
    0.3230000000f,
    0.5030000000f,
    0.7100000000f,
    0.8620000000f,
    0.9540000000f,
    0.9949501000f,
    0.9950000000f,
    0.9520000000f,
    0.8700000000f,
    0.7570000000f,
    0.6310000000f,
    0.5030000000f,
    0.3810000000f,
    0.2650000000f,
    0.1750000000f,
    0.1070000000f,
    0.0610000000f,
    0.0320000000f,
    0.0170000000f,
    0.0082100000f,
    0.0041020000f
};

float cieZ[31] = {
    0.0678500100f,
    0.2074000000f,
    0.6456000000f,
    1.3856000000f,
    1.7470600000f,
    1.7721100000f,
    1.6692000000f,
    1.2876400000f,
    0.8129501000f,
    0.4651800000f,
    0.2720000000f,
    0.1582000000f,
    0.0782499900f,
    0.0421600000f,
    0.0203000000f,
    0.0087499990f,
    0.0039000000f,
    0.0021000000f,
    0.0016500010f,
    0.0011000000f,
    0.0008000000f,
    0.0003400000f,
    0.0001900000f,
    0.0000500000f,
    0.0000200000f,
    0.0000000000f,
    0.0000000000f,
    0.0000000000f,
    0.0000000000f,
    0.0000000000f,
    0.0000000000f
};

float cieWl[31] = {
    400.0000000000f,
    410.0000000000f,
    420.0000000000f,
    430.0000000000f,
    440.0000000000f,
    450.0000000000f,
    460.0000000000f,
    470.0000000000f,
    480.0000000000f,
    490.0000000000f,
    500.0000000000f,
    510.0000000000f,
    520.0000000000f,
    530.0000000000f,
    540.0000000000f,
    550.0000000000f,
    560.0000000000f,
    570.0000000000f,
    580.0000000000f,
    590.0000000000f,
    600.0000000000f,
    610.0000000000f,
    620.0000000000f,
    630.0000000000f,
    640.0000000000f,
    650.0000000000f,
    660.0000000000f,
    670.0000000000f,
    680.0000000000f,
    690.0000000000f,
    700.0000000000f
};

float multiplyAndSum(float *array1, float *array2, unsigned int size)
{
    float sum = 0.0;
    for (auto i = 0u; i < size; ++i)
    {
        sum += array1[i] * array2[i];
    }

    return sum;
}

float getCIEX(float *spectrum)
{
    return multiplyAndSum(spectrum, cieX, 31);
}

float getCIEY(float *spectrum)
{
    return multiplyAndSum(spectrum, cieY, 31);
}

float getCIEZ(float *spectrum)
{
    return multiplyAndSum(spectrum, cieZ, 31);
}
